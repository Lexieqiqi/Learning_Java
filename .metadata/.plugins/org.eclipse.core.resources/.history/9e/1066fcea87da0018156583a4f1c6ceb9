package invoice;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.InputStreamReader;

public class Read extends Invoice {
	//private String item;
	//private int units;
	private double sum;
	private double cost;
	private Invoice invoice;
	
	public Read(Invoice invoice){
		this.invoice = invoice;
	}
	
	public void separate(String str) {
		char[] sep = str.toCharArray();
		int[] count = new int[3];
		int c = 0;
		for(int x = 0; x < str.length(); x++) {
			if(sep[x]=='\t') {
				count[c] = x;
				c++;
			}
		}
		//String Item = str.substring(0, count[0]);
		//System.out.println(name);
		//double single = Double.valueOf(str.substring(count[0]+1,count[1]));
		//System.out.println(single);
		//int num = Integer.parseInt(str.substring(count[1]+1,count[2]));
		//System.out.println(num);
		sum = Double.valueOf(str.substring(count[2]+1,str.length()));
		//System.out.println(sum);
		cost = cost + sum;
	}	

	public double cost() {
		return cost + this.invoice.cost();
	}

	public String getDescription() {
		String strTmp = "";
		try {
			// 在给定从中读取数据的文件名的情况下创建一个新 FileReader
			InputStreamReader reader = new InputStreamReader(new FileInputStream("d:\\shopping.txt"));

			// 创建一个使用默认大小输入缓冲区的缓冲字符输入流
			BufferedReader br = new BufferedReader(reader);

			//BufferedReader buffReader = new BufferedReader(reader);
	        
	        while((strTmp = br.readLine())!=null){
	            separate(strTmp);
	            strTmp = strTmp + br.readLine();
	        }
	        br.close();
		}
		catch(Exception e){
			e.printStackTrace();
		}
		return this.invoice.getDescription()+strTmp;
	}
}
